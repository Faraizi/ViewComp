// <auto-generated />
using System;
using BankCoreCRUD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankCoreCRUD.Migrations
{
    [DbContext(typeof(AccountContext))]
    [Migration("20250317153324_initialmodels")]
    partial class initialmodels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankCoreCRUD.Models.Account", b =>
                {
                    b.Property<int>("AcctID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcctID"));

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AcctID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("BankCoreCRUD.Models.Customer", b =>
                {
                    b.Property<int>("CustID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustID"));

                    b.Property<int>("AccID")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("DATE");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TranID")
                        .HasColumnType("int");

                    b.HasKey("CustID");

                    b.HasIndex("AccID");

                    b.HasIndex("TranID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BankCoreCRUD.Models.Transaction", b =>
                {
                    b.Property<int>("TranID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranID"));

                    b.Property<string>("AccType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TranID");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("BankCoreCRUD.Models.Customer", b =>
                {
                    b.HasOne("BankCoreCRUD.Models.Account", "Account")
                        .WithMany("Customers")
                        .HasForeignKey("AccID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankCoreCRUD.Models.Transaction", "Transaction")
                        .WithMany("Customers")
                        .HasForeignKey("TranID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("BankCoreCRUD.Models.Account", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("BankCoreCRUD.Models.Transaction", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
